@model IEnumerable<POS.DTO.CreditNote>

    @{
    ViewData["Title"] = "Credit Notes";
    }

    <h2>Credit Notes</h2>

    <table id="CreditNoteTable" class="table table-striped table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Credit_Note_Number)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Reference_Number)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Trans_Date_Ad)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Trans_Date_Bs)
                </th>
                <th class="text-center">
                    @Html.DisplayName("Gross Amount")
                </th>
                <th class="text-center">
                    @Html.DisplayName("Discount")
                </th>
                <th class="text-center">
                    @Html.DisplayName("Net Amount")
                </th>
                <th>
                    @Html.DisplayName("Credit Note")
                </th>
                <th>
                    @Html.DisplayName("Status")
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Credit_Note_Number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Reference_Number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Trans_Date_Ad)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Trans_Date_Bs)
                </td>
                <td class="gross-amount text-right pr-3">
                    @Html.DisplayFor(modelItem => item.Total_Gross_Amount)
                </td>
                <td class="discount text-right pr-3">
                    @Html.DisplayFor(modelItem => item.Total_Discount)
                </td>
                <td class="net-amount text-right pr-3">
                    @Html.DisplayFor(modelItem => item.Total_Net_Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Credit_Note)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Remarks)
                </td>
            </tr>}
        </tbody>
        <tfoot align="right">
            <tr>
                <th colspan="3" class="pr-3"></th>
                <th class="pr-3"></th>
                <th class="pr-3"></th>
                <th class="pr-3"></th>
                <th class="pr-3"></th>
                <th class="pr-3"></th>
                <th class="pr-3"></th>
               
            </tr>
        </tfoot>
    </table>

    @section Scripts {
    <script>
        var table = document.getElementById("CreditNoteTable").getElementsByTagName('tbody')[0];
        $.each(table.rows, function (i, v) {
            $(this).find(".gross-amount").text(CurrencyFormat($(this).find(".gross-amount").text()));
            $(this).find(".discount").text(CurrencyFormat($(this).find(".discount").text()));
            $(this).find(".vat").text(CurrencyFormat($(this).find(".vat").text()));
            $(this).find(".net-amount").text(CurrencyFormat($(this).find(".net-amount").text()));
        });


        $("#CreditNoteTable").DataTable({
            paging: false,
            searching: false,
            order: [0, "desc"],
            "footerCallback": function (row, data, start, end, display) {
                var api = this.api(), data;

                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                            i : 0;
                };

                grossAmountTotal = api
                    .column(4)
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);

                discounntTotal = api
                    .column(5)
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                netAmountTotal = api
                    .column(6)
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);

                $(api.column(3).footer()).html('Total');
                $(api.column(4).footer()).html(CurrencyFormat(grossAmountTotal));
                $(api.column(5).footer()).html(CurrencyFormat(discounntTotal));
                $(api.column(6).footer()).html(CurrencyFormat(netAmountTotal));               
            }
        });
    </script>
    }

