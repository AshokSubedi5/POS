// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS.Core;

namespace POS.Core.Migrations
{
    [DbContext(typeof(EntityCore))]
    partial class EntityCoreModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("POS.DTO.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Barcode");

                    b.Property<string>("Code");

                    b.Property<string>("Created_By");

                    b.Property<DateTime?>("Created_Date");

                    b.Property<int?>("Credit_Day");

                    b.Property<decimal?>("Credit_Limit");

                    b.Property<string>("Designation");

                    b.Property<DateTime?>("Dob");

                    b.Property<string>("Dob_Bs");

                    b.Property<string>("Email");

                    b.Property<int?>("Family_Member_Int");

                    b.Property<string>("Fax");

                    b.Property<string>("Image");

                    b.Property<bool?>("Is_Member");

                    b.Property<bool?>("Is_Sale_Refused");

                    b.Property<string>("Member_Id");

                    b.Property<int?>("Membership_Scheme");

                    b.Property<string>("Mobile1");

                    b.Property<string>("Mobile2");

                    b.Property<string>("Name");

                    b.Property<string>("Occupation");

                    b.Property<string>("Office_Address");

                    b.Property<string>("Office_Name");

                    b.Property<string>("Po_Box");

                    b.Property<string>("Reference_By");

                    b.Property<DateTime?>("Registration_Date");

                    b.Property<string>("Remarks");

                    b.Property<string>("Tel1");

                    b.Property<string>("Tel2");

                    b.Property<string>("Type");

                    b.Property<DateTime?>("Validity_Date");

                    b.Property<string>("Validity_Period");

                    b.Property<string>("Vat");

                    b.Property<DateTime?>("Wedding_Date");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("POS.DTO.Denomination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cheque");

                    b.Property<DateTime>("Date");

                    b.Property<decimal?>("Debit_Card");

                    b.Property<decimal?>("Other");

                    b.Property<decimal?>("R05");

                    b.Property<decimal?>("R1");

                    b.Property<decimal?>("R10");

                    b.Property<decimal?>("R100");

                    b.Property<decimal?>("R1000");

                    b.Property<decimal?>("R2");

                    b.Property<decimal?>("R20");

                    b.Property<decimal?>("R25");

                    b.Property<decimal?>("R250");

                    b.Property<decimal?>("R5");

                    b.Property<decimal?>("R50");

                    b.Property<decimal?>("R500");

                    b.Property<string>("Remarks");

                    b.Property<decimal?>("Ric");

                    b.Property<int>("Terminal_Id");

                    b.Property<decimal?>("Total");

                    b.Property<string>("User_Id");

                    b.HasKey("Id");

                    b.HasIndex("Terminal_Id");

                    b.ToTable("Denomination");
                });

            modelBuilder.Entity("POS.DTO.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bar_Code");

                    b.Property<string>("Code");

                    b.Property<bool?>("Is_Vatable");

                    b.Property<string>("Name");

                    b.Property<string>("Parent_Code");

                    b.Property<decimal?>("Rate");

                    b.Property<string>("Remarks");

                    b.Property<string>("Type");

                    b.Property<string>("Unit");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("POS.DTO.ItemCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("Description");

                    b.Property<bool>("Has_Child");

                    b.Property<int>("Indentation");

                    b.Property<DateTime>("Modified_Date");

                    b.Property<int>("Order");

                    b.Property<string>("Parent_Code");

                    b.HasKey("Id");

                    b.ToTable("Item_Category");
                });

            modelBuilder.Entity("POS.DTO.ItemGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Description");

                    b.Property<string>("Item_Category_Code");

                    b.HasKey("Id");

                    b.ToTable("Item_Group");
                });

            modelBuilder.Entity("POS.DTO.SalesInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Chalan_Number");

                    b.Property<string>("Created_By");

                    b.Property<DateTime?>("Created_Date");

                    b.Property<string>("Customer_Address");

                    b.Property<int?>("Customer_Id");

                    b.Property<string>("Customer_Mobile");

                    b.Property<string>("Customer_Name");

                    b.Property<string>("Customer_Vat");

                    b.Property<string>("Division");

                    b.Property<decimal?>("Flat_Discount_Amount");

                    b.Property<decimal?>("Flat_Discount_Percent");

                    b.Property<int>("Invoice_Id");

                    b.Property<string>("Invoice_Number");

                    b.Property<string>("Remarks");

                    b.Property<string>("Terminal");

                    b.Property<decimal?>("Total_Discount");

                    b.Property<decimal?>("Total_Gross_Amount");

                    b.Property<decimal?>("Total_Net_Amount");

                    b.Property<int?>("Total_Quantity");

                    b.Property<decimal?>("Total_Vat");

                    b.Property<DateTime?>("Trans_Date_Ad");

                    b.Property<string>("Trans_Date_Bs");

                    b.Property<TimeSpan?>("Trans_Time");

                    b.Property<string>("Trans_Type");

                    b.HasKey("Id");

                    b.ToTable("SALES_INVOICE");
                });

            modelBuilder.Entity("POS.DTO.SalesInvoiceBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account");

                    b.Property<decimal>("Amount");

                    b.Property<string>("Division");

                    b.Property<Guid>("Invoice_Id_Temp");

                    b.Property<string>("Invoice_Number");

                    b.Property<string>("Remarks");

                    b.Property<string>("Terminal");

                    b.Property<string>("Trans_Mode");

                    b.HasKey("Id");

                    b.ToTable("SALES_INVOICE_BILL");
                });

            modelBuilder.Entity("POS.DTO.SalesInvoiceTmp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Chalan_Number");

                    b.Property<string>("Created_By");

                    b.Property<DateTime?>("Created_Date");

                    b.Property<string>("Customer_Address");

                    b.Property<int?>("Customer_Id");

                    b.Property<string>("Customer_Mobile");

                    b.Property<string>("Customer_Name");

                    b.Property<string>("Customer_Vat");

                    b.Property<string>("Division");

                    b.Property<decimal?>("Flat_Discount_Amount");

                    b.Property<decimal?>("Flat_Discount_Percent");

                    b.Property<int>("Invoice_Id");

                    b.Property<string>("Invoice_Number");

                    b.Property<string>("Remarks");

                    b.Property<string>("Terminal");

                    b.Property<decimal?>("Total_Discount");

                    b.Property<decimal?>("Total_Gross_Amount");

                    b.Property<decimal?>("Total_Net_Amount");

                    b.Property<int?>("Total_Quantity");

                    b.Property<decimal?>("Total_Vat");

                    b.Property<DateTime?>("Trans_Date_Ad");

                    b.Property<string>("Trans_Date_Bs");

                    b.Property<TimeSpan?>("Trans_Time");

                    b.Property<string>("Trans_Type");

                    b.HasKey("Id");

                    b.ToTable("SALES_INVOICE_TMP");
                });

            modelBuilder.Entity("POS.DTO.Store", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ADDRESS");

                    b.Property<string>("COMPANY_NAME");

                    b.Property<string>("EMAIL");

                    b.Property<string>("FAX");

                    b.Property<string>("FISCAL_YEAR");

                    b.Property<string>("INITIAL")
                        .IsRequired();

                    b.Property<string>("NAME");

                    b.Property<string>("PHONE");

                    b.Property<string>("PHONE_ALT");

                    b.Property<string>("VAT");

                    b.Property<string>("WEBSITE");

                    b.HasKey("ID");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("POS.DTO.Terminal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cash_Drop_Limit");

                    b.Property<string>("Initial");

                    b.Property<bool?>("Is_Active");

                    b.Property<string>("Name");

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.ToTable("Terminal");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("POS.DTO.Denomination", b =>
                {
                    b.HasOne("POS.DTO.Terminal", "Terminal")
                        .WithMany()
                        .HasForeignKey("Terminal_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
